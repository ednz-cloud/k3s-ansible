---
- name: Verify
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: "Test: binary /usr/local/bin/k3s"
      block:
        - name: "Stat binary /usr/local/bin/k3s"
          ansible.builtin.stat:
            path: "/usr/local/bin/k3s"
          register: stat_usr_local_bin_k3s

        - name: "Verify binary /usr/local/bin/k3s"
          ansible.builtin.assert:
            that:
              - stat_usr_local_bin_k3s.stat.exists
              - stat_usr_local_bin_k3s.stat.isreg
              - stat_usr_local_bin_k3s.stat.pw_name == 'root'
              - stat_usr_local_bin_k3s.stat.gr_name == 'root'
              - stat_usr_local_bin_k3s.stat.mode == '0755'

    - name: "Test: directory /etc/rancher/k3s"
      block:
        - name: "Stat directory /etc/rancher/k3s"
          ansible.builtin.stat:
            path: "/etc/rancher/k3s"
          register: stat_etc_rancher_k3s

        - name: "Stat file /etc/rancher/k3s/k3s.env"
          ansible.builtin.stat:
            path: "/etc/rancher/k3s/k3s.env"
          register: stat_etc_rancher_k3s_k3s_env

        - name: "Stat file /etc/rancher/k3s/k3s.config.yml"
          ansible.builtin.stat:
            path: "/etc/rancher/k3s/k3s.config.yml"
          register: stat_etc_rancher_k3s_k3s_config_yml

        - name: "Slurp file /etc/rancher/k3s/k3s.config.yml"
          ansible.builtin.slurp:
            src: "/etc/rancher/k3s/k3s.config.yml"
          register: slurp_etc_consul_d_k3s_config_yml

        - name: "Verify directory /etc/rancher/k3s"
          ansible.builtin.assert:
            that:
              - stat_etc_rancher_k3s.stat.exists
              - stat_etc_rancher_k3s.stat.isdir
              - stat_etc_rancher_k3s.stat.pw_name == 'root'
              - stat_etc_rancher_k3s.stat.gr_name == 'root'
              - stat_etc_rancher_k3s.stat.mode == '0755'
              - stat_etc_rancher_k3s_k3s_env.stat.exists
              - stat_etc_rancher_k3s_k3s_env.stat.isreg
              - stat_etc_rancher_k3s_k3s_env.stat.pw_name == 'root'
              - stat_etc_rancher_k3s_k3s_env.stat.gr_name == 'root'
              - stat_etc_rancher_k3s_k3s_env.stat.mode == '0600'
              - stat_etc_rancher_k3s_k3s_config_yml.stat.exists
              - stat_etc_rancher_k3s_k3s_config_yml.stat.isreg
              - stat_etc_rancher_k3s_k3s_config_yml.stat.pw_name == 'root'
              - stat_etc_rancher_k3s_k3s_config_yml.stat.gr_name == 'root'
              - stat_etc_rancher_k3s_k3s_config_yml.stat.mode == '0600'
              - slurp_etc_consul_d_k3s_config_yml.content != ''

    - name: "Test: directory /var/lib/rancher/k3s"
      block:
        - name: "Stat directory /var/lib/rancher/k3s"
          ansible.builtin.stat:
            path: "/var/lib/rancher/k3s"
          register: stat_var_lib_rancher_k3s

        - name: "Verify directory /var/lib/rancher/k3s"
          ansible.builtin.assert:
            that:
              - stat_var_lib_rancher_k3s.stat.exists
              - stat_var_lib_rancher_k3s.stat.isdir
              - stat_var_lib_rancher_k3s.stat.pw_name == 'root'
              - stat_var_lib_rancher_k3s.stat.gr_name == 'root'
              - stat_var_lib_rancher_k3s.stat.mode == '0755'

    - name: "Test: service k3s"
      block:
        - name: "Get service k3s"
          ansible.builtin.service_facts:

        - name: "Stat file /etc/systemd/system/k3s.service"
          ansible.builtin.stat:
            path: "/etc/systemd/system/k3s.service"
          register: stat_etc_systemd_system_k3s_service

        - name: "Slurp file /etc/systemd/system/k3s.service"
          ansible.builtin.slurp:
            src: "/etc/systemd/system/k3s.service"
          register: slurp_etc_systemd_system_k3s_service

        - name: "Verify service k3s"
          vars:
            k3s_expected_service_file: |
              # Ansible managed: Do NOT edit this file manually!
              [Unit]
              Description=Lightweight Kubernetes
              Documentation=https://k3s.io
              Wants=network-online.target
              After=network-online.target

              [Install]
              WantedBy=multi-user.target

              [Service]
              Type=notify
              EnvironmentFile=-/etc/rancher/k3s/k3s.env
              KillMode=process
              Delegate=yes
              LimitNOFILE=1048576
              LimitNPROC=infinity
              LimitCORE=infinity
              TasksMax=infinity
              TimeoutStartSec=0
              Restart=always
              RestartSec=5s
              ExecStartPre=/bin/sh -xc '! /usr/bin/systemctl is-enabled --quiet nm-cloud-setup.service 2>/dev/null'
              ExecStartPre=-/sbin/modprobe br_netfilter
              ExecStartPre=-/sbin/modprobe overlay
              ExecStart=/usr/local/bin/k3s server --config /etc/rancher/k3s/k3s.config.yml
          ansible.builtin.assert:
            that:
              - stat_etc_systemd_system_k3s_service.stat.exists
              - stat_etc_systemd_system_k3s_service.stat.isreg
              - stat_etc_systemd_system_k3s_service.stat.pw_name == 'root'
              - stat_etc_systemd_system_k3s_service.stat.gr_name == 'root'
              - stat_etc_systemd_system_k3s_service.stat.mode == '0644'
              - (slurp_etc_systemd_system_k3s_service.content|b64decode) == k3s_expected_service_file
              - ansible_facts.services['k3s.service'] is defined
              - ansible_facts.services['k3s.service']['source'] == 'systemd'
              - ansible_facts.services['k3s.service']['state'] == 'running'
              - ansible_facts.services['k3s.service']['status'] == 'enabled'
